<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <title>roles</title>
    <link type="text/css" rel="stylesheet" href="~/layuiadmin/layui/css/layui.css" media="all" />
    <link type="text/css" rel="stylesheet" href="~/layuiadmin/style/admin.css" media="all">
</head>
<body>
    <div class="layui-fluid">
        <div class="layui-card">
            <div class="layui-form layui-card-header layuiadmin-card-header-auto" id="role-search">
                <div class="layui-form-item">
                    <div class="layui-input-wrap layui-inline">
                        <div class="layui-input-prefix">
                            <i class="layui-icon layui-icon-username"></i>
                        </div>
                        <input type="text" name="name" value="" placeholder="角色名" class="layui-input" lay-affix="clear">
                    </div>

                    <button class="layui-btn" lay-submit lay-filter="table-search">搜索</button>
                </div>
            </div>
            <div class="layui-card-body">
                <!--工具栏-->
                <script type="text/html" id="ID-table-role-toolbar">
                    <div class="layui-btn-group">
                        <!-- 添加角色-->
                        <div  type="button" class="layui-btn layui-btn-sm layui-btn-primary" lay-event="add" title="添加角色">
                            添加
                        </div>
                     </div>
                </script>

                <!-- 行编辑按钮 -编辑角色 -->
                <script type="text/html" id="cell-operation">
                    <div  type="button" class="layui-btn layui-btn-xs layui-btn-primary"  lay-event="edit" title="编辑角色">
                          <i class="layui-icon layui-icon-edit"></i>
                    </div>
                </script>
                <!--table-->
                <table class="layui-hide layui-table" id="ID-table-role" lay-filter="ID-table-role"></table>
                <!--分页栏-->
                <script type="text/html" id="ID-table-role-pagebar">
                    <div class="layui-btn-container" >
                    </div>
                </script>
            </div>
        </div>
    </div>
</body>
</html>
<script type="text/javascript" src="~/common/qs.js"></script>
<script type="text/javascript" src="~/schema/ZSchema-browser-min.js"></script>
<script type="text/javascript" src="~/schema/jsonSchemas.js"></script>
<script type="text/javascript" src="~/common/dayjs.min.js"></script>
<script type="text/javascript" src="~/layuiadmin/layui/layui.js"></script>
<script type="text/javascript">
    layui.config({
        base: '../layuiadmin/' //静态资源所在路径
    }).extend({
        index: 'lib/index' //主入口模块
    }).use(function () {

        let table = layui.table,
            form = layui.form,
            layer = layui.layer;

        //表单渲染
        table.render({
            elem: '#ID-table-role'
            , url: '/api/roleinfos/paged' // API接口
            , request: {
                pageName: 'pageIndex',  //替换分页的字段名称，后端可识别
                limitName: 'pageSize'
            }
            //除分页固定参数之后，其他的拼接参数
            , where: {
                offset: 0,                //数据偏移量
                orderby: "created desc"   //默认排序
            }
            , page: { // 支持传入 laypage 组件的所有参数（某些参数除外，如：jump/elem） - 详见文档
                layout: ['count', 'prev', 'page', 'next', 'limit', 'refresh', 'skip'] //自定义分页布局
                , prev: "上一页"
                , next: "下一页"
                //,curr: 5 //设定初始在第 5 页
                //,groups: 1 //只显示 1 个连续页码
                , limit: 10   //页面数量限制
            }
            , skin: 'default' // 表格风格
            , even: true   //开启偶数行背景色
            , css: [ // 直接给当前表格主容器重置 css 样式
                '.layui-table-page{text-align: center;}' // 让分页栏居中
            ].join('')
            , toolbar: '#ID-table-role-toolbar'
            , pagebar: '#ID-table-role-pagebar' // 分页栏模板
            , totalRow: true // 开启合计行
            , cols: [[                               // 列名
                { type: 'checkbox', fixed: 'left' }
                , { field: 'rId', title: 'ID' }
                , { field: 'name', title: '角色名' }
                , {
                    fixed: 'right', minWidth: 142, title: '操作', toolbar: "#cell-operation"
                }
            ]]
            , response: {
                statusCode: 200 // 重新规定成功的状态码为 200，table 组件默认为 0
            }
            , parseData: function (res) {  //转换后端返回的数据格式
                return {
                    "code": res.status,
                    "msg": res.uimsg,
                    "count": res.data.totalCount,
                    "data": res.data.list
                };
            }
        })

        //工具栏事件
        table.on('toolbar(ID-table-role)', function (obj) {
            var id = obj.config.id;
            var checkStatus = table.checkStatus(id);
            switch (obj.event) {
                case 'add':
                    layer.open({
                        title: "添加角色",
                        type: 2,
                        area: ['480px', '215px'],
                        content: '/roleinfos/create',
                        btn: ["提交", '取消'],
                        yes: function (index, layero) {
                            var iframeWindow = window['layui-layer-iframe' + index]
                                //, submitID = 'LAY-account-create'
                                , submitFilter = 'form-role-filter'

                            //1.获取表单数据
                            let formData = iframeWindow.layui.form.val(submitFilter)
                            console.log(formData)
                            //2.json schema 校验表单数据
                            if (formData != {}) {
                                let schemas = jsonSchemas.getSchema("role-create")
                                if (schemas.res == false) {
                                    layer.msg(schemas.msg)
                                    return;
                                }

                                let validator = new ZSchema();
                                validator.validate(formData, schemas.data, function (err, valid) {
                                    if (!valid) {
                                        layer.msg(`${err[err.length - 1].title}：${err[err.length - 1].message}`)
                                        return
                                    }

                                    var form = new FormData();
                                    form.append('name', formData["name"]);

                                    //3.提交表单数据
                                    createRole(form, index);
                                });
                            }
                        }
                    })
                    break;
            }
        })


        /**
        * bref fetch 创建角色
        * param data 
        * param iframeIndex 弹窗的 index
        */
        async function createRole(data, iframeIndex) {
            let loadIndex = layer.load(0);
            await fetch(`/api/roleinfos`,
                {
                    method: 'post',
                    //headers: {
                    //    'Content-Type': 'application/json'
                    //},
                    body: data
                })
                .then(response => response.json())
                .then(result => {
                    layer.close(loadIndex);
                    if (result.status == 200) {
                        table.reload('ID-table-account');
                        layer.close(iframeIndex); //关闭弹层
                        layer.msg("账号添加成功");
                    } else {
                        layer.msg(result.uimsg);
                    }
                })
                .catch(function (ex) {
                    layer.close(loadIndex);
                    console.log('parsing failed', ex);
                })
        }


        //外部搜索
        form.on('submit(table-search)', function (data) {
            var field = data.field;
            //console.log('search',field)
            // 执行搜索重载
            table.reload('ID-table-role', {
                page: {
                    curr: 1 // 重新从第 1 页开始
                }
                , where: field // 搜索的字段
            });
            return false; // 阻止默认 form 跳转
        })

    })
</script>