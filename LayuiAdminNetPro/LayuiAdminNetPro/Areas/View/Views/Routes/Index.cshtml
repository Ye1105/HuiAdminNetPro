@model Dictionary<string,string>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <title>welcome</title>
    <link type="text/css" rel="stylesheet" href="~/layuiadmin/layui/css/layui.css" media="all" />
    <link type="text/css" rel="stylesheet" href="~/layuiadmin/style/admin.css" media="all">
</head>
<body>
    <div class="layui-fluid">
        <div class="layui-fluid">
            <div class="layui-card">
                <div class="layui-card-body">
                    <div class="layui-form" id="routes" lay-filter="LAY-route">
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script type="text/javascript" src="~/layuiadmin/layui/layui.js"></script>
<script type="text/javascript">
    layui.config({
        base: '../layuiadmin/' //静态资源所在路径
    }).extend({
        index: 'lib/index' //主入口模块
    }).use(function () {

        let $ = layui.$,
            form = layui.form;

        var rId = `@(Model["rId"])`;

        getRoute(rId);

        async function getRoute(rId) {
            let loadIndex = layer.load(0);
            await fetch(`/api/routes?rId=${rId}`)
                .then(response => response.json())
                .then(result => {
                    layer.close(loadIndex);
                    if (result.status == 200) {
                        //解构赋值
                        let { routes, permissions } = result.data;

                        //顶级节点
                        let pr = routes.filter(x => x.pId == "00000000-0000-0000-0000-000000000000");
                        //console.log(pr)
                        let renderHtml = '';
                        pr.forEach(x => {
                            renderHtml += `<div class="layui-form-item"><dl class="permission-list">`

                            let prc = permissions.filter(n => n.adminRoute.pId == x.id);
                            renderHtml += `<dt><input type="checkbox" lay-filter="c_top" name="${x.id}_${@((sbyte)CrudType.READ)}" title=${x.name} ${prc.length > 0 ? "checked" : ""}></dt>`

                            //当前顶级节点的所有次级节点
                            let su = routes.filter(v => v.pId == x.id)
                            //console.log(su)

                            su.forEach(m => {
                                renderHtml += '<dd style="margin-left:30px">'

                                let suPermission = permissions.filter(n => n.mId == m.id);
                                //查询
                                let r = suPermission.filter(n => n.cId == @((sbyte)CrudType.READ)).length
                                //添加
                                let c = suPermission.filter(n => n.cId == @((sbyte)CrudType.CREATE)).length
                                //更新
                                let u = suPermission.filter(n => n.cId == @((sbyte)CrudType.UPDATE)).length
                                //删除
                                let d = suPermission.filter(n => n.cId == @((sbyte)CrudType.DELETE)).length

                                renderHtml += `<input type="checkbox"  lay-filter="c_header" name="${m.id}" title="${m.name}" ${suPermission.length > 0 ? "checked" : ""}>`

                                renderHtml += `<input type="checkbox"  name="${m.id}_${@((sbyte)CrudType.READ)}" title="查询" ${r > 0 ? "checked" : ""}>`
                                renderHtml += `<input type="checkbox"  name="${m.id}_${@((sbyte)CrudType.CREATE)}" title="添加" ${c > 0 ? "checked" : ""}>`
                                renderHtml += `<input type="checkbox"  name="${m.id}_${@((sbyte)CrudType.UPDATE)}" title="修改" ${u > 0 ? "checked" : ""}>`
                                renderHtml += `<input type="checkbox"  name="${m.id}_${@((sbyte)CrudType.DELETE)}" title="删除" ${d > 0 ? "checked" : ""}>`
                                renderHtml += '</dd>'
                            })
                            renderHtml += `</dl></div>`
                        })


                        $("#routes").html(renderHtml)

                        form.render();
                    } else {
                        layer.msg(result.uimsg);
                    }
                })
                .catch(function (ex) {
                    layer.close(loadIndex);
                    console.log('parsing failed', ex);
                })
        }


   
        form.on('checkbox(c_top)', function (data) {
            let elem = data.elem; // 获得 checkbox 原始 DOM 对象
            let checked = elem.checked; // 获得 checkbox 选中状态
            let value = elem.value; // 获得 checkbox 值
            let othis = data.othis; // 获得 checkbox 元素被替换后的 jQuery 对象

            let res = $(othis).closest("dl").find("dd input:checkbox")
            for (let i = 0; i < res.length; i++) {
                let ele = res[i]
                ele.checked = checked
                if (checked)
                    ele.nextSibling.classList.add("layui-form-checked")
                else
                    ele.nextSibling.classList.remove("layui-form-checked")
            }
            //layer.msg('checked 状态: ' + elem.checked + elem.name);
        });


        form.on('checkbox(c_header)', function (data) {
            let elem = data.elem; // 获得 checkbox 原始 DOM 对象
            let checked = elem.checked; // 获得 checkbox 选中状态
            let value = elem.value; // 获得 checkbox 值
            let othis = data.othis; // 获得 checkbox 元素被替换后的 jQuery 对象
            let eles = [`${elem.name}_@((sbyte)CrudType.READ)`, `${elem.name}_@((sbyte)CrudType.CREATE)`, `${elem.name}_@((sbyte)CrudType.UPDATE)`, `${elem.name}_@((sbyte)CrudType.DELETE)`]
            if (checked) {
                eles.map(x => {
                    document.getElementsByName(x)[0].checked = checked
                    document.getElementsByName(x)[0].nextSibling.classList.add("layui-form-checked")
                })
            } else {
                eles.map(x => {
                    document.getElementsByName(x)[0].checked = checked
                    document.getElementsByName(x)[0].nextSibling.classList.remove("layui-form-checked")
                })
            }
            //layer.msg('checked 状态: ' + elem.checked+elem.name);
        });
    })
</script>